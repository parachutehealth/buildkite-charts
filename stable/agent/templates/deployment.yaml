apiVersion: {{ template "deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
{{- if .Values.replicaCount }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      app: {{ template "name" . }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- if .Values.registryCreds.gcrServiceAccountKey }}
        checksum/secret-gcr: {{ include (print $.Template.BasePath "/secret-gcr.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.registryCreds.dockerConfig }}
        checksum/secret-registry: {{ include (print $.Template.BasePath "/secret-registry.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.registryCreds.dockerconfigjson }}
        checksum/secret-dockerconfigjson: {{ include (print $.Template.BasePath "/secret-dockerconfigjson.yaml") . | sha256sum }}
        {{- end }}
{{- with .Values.podAnnotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      serviceAccount: {{ template "fullname" . }}
      {{- if .Values.registryCreds.dockerconfigjson }}
      imagePullSecrets:
      - name: {{ template "fullname" . }}-dockerconfigjson
      {{- end }}
{{- if .Values.podInitContainers }}
      initContainers:
{{ toYaml .Values.podInitContainers | nindent 8 }}
{{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- with .Values.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
{{- end }}
          env:
            # BUILDKITE AGENT ENV VARS
            {{- if .Values.agent.externalSecretName }}
            - name: BUILDKITE_AGENT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.agent.externalSecretName }}
                  key: {{ .Values.agent.externalSecretTokenKey }}
            {{- if .Values.agent.externalSecretSSHKey }}
            - name: SSH_PRIVATE_RSA_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.agent.externalSecretName }}
                  key: {{ .Values.agent.externalSecretSSHKey }}
            {{- end }}
            {{- else }}
            {{- if .Values.agent.token }}
            - name: BUILDKITE_AGENT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: agent-token
            {{- end }}
            {{- if .Values.privateSshKey }}
            - name: SSH_PRIVATE_RSA_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: agent-ssh
            {{- end }}
            {{- end }}
            - name: BUILDKITE_AGENT_TAGS
              value: "{{ .Values.agent.tags }}"
            {{- if .Values.dind.enabled }}
            - name: DOCKER_HOST
              value: "tcp://localhost:{{ .Values.dind.port | default "2375" }}"
            - name: BUILDKITE_BUILD_PATH
              value: "/var/buildkite/builds"
            - name: BUILDKITE_PLUGINS_PATH
              value: "/var/buildkite/plugins"
            - name: BUILDKITE_HOOKS_PATH
              value: "/var/buildkite/hooks"
            {{- end }}
            # EXTRA BUILDKITE AGENT ENV VARS
{{- if .Values.extraEnv }}
{{ toYaml .Values.extraEnv | nindent 12 }}
{{- end }}
{{- if .Values.lifecycle.useDefault }}
{{- if or .Values.lifecycle.preStop .Values.lifecycle.postStart }}
{{ fail "lifecycle.useDefault set to true, but lifecycle.preStop/lifecycle.postStart specified"}}
{{- end }}
          # DEFAULT LIFECYCLE HOOK
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - kill -s SIGTERM `/bin/pidof buildkite-agent` && while pidof -q buildkite-agent; do sleep 1; done
{{- else if or .Values.lifecycle.preStop .Values.lifecycle.postStart }}
          lifecycle:
            # LIFECYCLE PRE STOP
{{- if .Values.lifecycle.preStop }}
            preStop:
{{- toYaml .Values.lifecycle.preStop | nindent 14 }}
{{- end }}
            # LIFECYCLE POST START
{{- if .Values.lifecycle.postStart }}
            postStart:
{{- toYaml .Values.lifecycle.postStart | nindent 14 }}
{{- end }}
{{- end }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
{{- if .Values.volumeMounts }}{{ toYaml .Values.volumeMounts | nindent 12 }}{{- end }}
{{- if .Values.enableHostDocker }}
            - name: var-run-docker-sock
              mountPath: /var/run/docker.sock
{{- end }}
            {{- if .Values.registryCreds.gcrServiceAccountKey }}
            - name: service-key
              mountPath: /etc/service_key
            {{- end }}
            {{- if .Values.registryCreds.dockerConfig }}
            - name: docker-config
              mountPath: /root/.docker
            {{- end }}
            {{- if .Values.dind.enabled }}
            - name: shared-volume
              mountPath: "/var/buildkite"
            {{- end }}
            {{- if .Values.entrypointd }}
            - name: entrypointd
              mountPath: /docker-entrypoint.d/
            {{- end }}
{{- if .Values.dind.enabled }}
        - name: dind
          image: {{ .Values.dind.image | default "docker:19.03-dind" }}
          args:
            - "--mtu"
            - "{{ .Values.dind.mtu | default "1500" }}"
          securityContext:
            privileged: true
          env:
          - name: DOCKER_TLS_CERTDIR
            value: ""
          volumeMounts:
            {{- if .Values.dind.volumeMounts }}{{ toYaml .Values.dind.volumeMounts | nindent 12 }}{{- end }}
            - name: "docker-graph-storage"
              mountPath: "/var/lib/docker"
            - name: shared-volume
              mountPath: "/var/buildkite"
            {{- if .Values.registryCreds.gcrServiceAccountKey }}
            - name: service-key
              mountPath: /etc/service_key
            {{- end }}
          resources:
{{ toYaml .Values.dind.resources | indent 12 }}
{{- end }}
{{- if .Values.podContainers }}{{ toYaml .Values.podContainers | nindent 8 }}{{- end }}
{{- with .Values.podSecurityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
{{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
{{- if .Values.volumes }}{{ toYaml .Values.volumes | nindent 8 }}{{- end }}
{{- if .Values.enableHostDocker }}
        - name: var-run-docker-sock
          hostPath:
            path: /var/run/docker.sock
{{- end }}
        {{- if .Values.registryCreds.gcrServiceAccountKey }}
        - name: service-key
          secret:
            secretName: {{ template "fullname" . }}-gcr
        {{- end }}
        {{- if .Values.registryCreds.dockerConfig }}
        - name: docker-config
          secret:
            secretName: {{ template "fullname" . }}-registry
        {{- end }}
        {{- if .Values.dind.enabled }}
        - name: docker-graph-storage
          emptyDir: {}
        - name: shared-volume
          emptyDir: {}
        {{- end }}
        {{- if .Values.entrypointd }}
        - name: entrypointd
          configMap:
            name: {{ template "fullname" . }}-entrypointd
            defaultMode: 0777
        {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
